<UserControl x:Class="ESD.JC_GoodsIssue.Views.GIMainView"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
            mc:Ignorable="d"
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
            xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
            xmlns:wpf="clr-namespace:Prism.Interactivity;assembly=Prism.Wpf"
            xmlns:conv="clr-namespace:ESD.JC_GoodsReceive.Converters;assembly=ESD.JC_GoodsReceive"
            xmlns:prism="http://prismlibrary.com/"
            xmlns:infrastructure="clr-namespace:ESD.JC_Infrastructure;assembly=ESD.JC_Infrastructure"
            d:DesignWidth="800" d:DesignHeight="600">
    <UserControl.Resources>
        <conv:CollectionToBooleanConverter x:Key="CollectionToBooleanConverter"/>
        <infrastructure:ObservableCommand x:Key="OpenGIDetailsCommand" Value="{Binding OpenGIDetailsCommand}"/>
        <CollectionViewSource x:Key="TrnxEntries" Source="{Binding GoodsIssues}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Text" />
            </CollectionViewSource.GroupDescriptions>
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="CreatedOn" Direction="Descending" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
    </UserControl.Resources>

    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding ConfirmDeleteInteractionRequest, Mode=OneWay}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True"/>
        </prism:InteractionRequestTrigger>
        <i:EventTrigger EventName="Loaded">
            <wpf:InvokeCommandAction Command="{Binding OnLoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid x:Name="LayoutRoot" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Grid.Column="0" Margin="0, 5, 0, 0" >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <ToolBar Background="Transparent" HorizontalAlignment="Left" Grid.Row="0" Grid.Column="0" Margin="0, 5, 0, 5" Loaded="ToolBar_Loaded">
                    <!--<Button ToolTipService.ToolTip="Click to delete selected item" Command="{Binding DeleteCommand}">
                        <StackPanel Orientation="Horizontal">
                            <Image RenderOptions.BitmapScalingMode="HighQuality" 
                                   Source="/Resources/btn_delete.png" Height="40" Width="40" Margin="4">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" Value="0.5" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </StackPanel>
                    </Button>
                    <Separator/>-->
                    <Button ToolTipService.ToolTip="Click to export" Command="{Binding ExportCommand}">
                        <StackPanel Orientation="Horizontal">
                            <Image RenderOptions.BitmapScalingMode="HighQuality" 
                                   Source="/Resources/img_btn_export.png" Height="40" Width="40" Margin="4">
                            </Image>
                        </StackPanel>
                    </Button>
                </ToolBar>

                <Grid Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="10,10,20,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Border Grid.Row="0" Grid.Column="0" BorderBrush="Black" BorderThickness="2" VerticalAlignment="Center" CornerRadius="5">
                        <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Image Grid.Column="0" RenderOptions.BitmapScalingMode="HighQuality" Source="/Resources/btn_find.png" Height="18"/>
                            <TextBox Grid.Column="1" Text="{Binding FilterTextBox, UpdateSourceTrigger=PropertyChanged}" Style="{x:Null}" Margin="3 0 0 0" Width="100"
                                     HorizontalAlignment="Stretch" x:Name="FilterTextBox"/>
                            <TextBlock Grid.Column="1" IsHitTestVisible="False" FontSize="10" Text="SAP No/Text" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="DarkGray">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, ElementName=FilterTextBox}" Value="">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Border>
                </Grid>
            </Grid>
        </StackPanel>

        <GridSplitter Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="10" ShowsPreview="True" />

        <DataGrid ItemsSource="{Binding Source={StaticResource TrnxEntries}}" 
                  SelectedItem="{Binding SelectedGI}" 
                  CurrentCell="{Binding CellInfo, Mode=TwoWay}"
                  IsSynchronizedWithCurrentItem="True"
                  AutoGenerateColumns="False" 
                  IsReadOnly="True" 
                  HorizontalAlignment="Stretch" 
                  VerticalAlignment="Stretch" 
                  AutomationProperties.AutomationId="GIGrid" 
                  HorizontalScrollBarVisibility="Auto" 
                  VerticalScrollBarVisibility="Auto" 
                  Grid.Row="2" 
                  Margin="0,10,0,0">
            <DataGrid.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="{Binding Path=Name}" />
                            </StackPanel>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander Background="LightGray" HorizontalAlignment="Stretch" IsExpanded="True">
                                            <Expander.Header>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding Path=Name}" Margin="5,0,5,0" />
                                                    <TextBlock>(</TextBlock>
                                                    <TextBlock Text="{Binding Path=ItemCount}" Margin="0,0,5,0"/>
                                                    <TextBlock Text="Items"/>
                                                    <TextBlock>)</TextBlock>
                                                </StackPanel>
                                            </Expander.Header>
                                            <Grid HorizontalAlignment="Stretch">
                                                <ItemsPresenter HorizontalAlignment="Stretch" />
                                            </Grid>
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </DataGrid.GroupStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn Width="Auto">
                <DataGridTemplateColumn.Header>
                    <CheckBox ToolTipService.ToolTip="Check All" 
                                IsThreeState="True"
                                IsChecked="{Binding DataContext.GoodsReceive, ElementName=LayoutRoot, Converter={StaticResource CollectionToBooleanConverter}, Mode=OneWay}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked" >
                                <wpf:InvokeCommandAction Command="{Binding DataContext.CheckedAllCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="Unchecked" >
                                <wpf:InvokeCommandAction Command="{Binding DataContext.UnCheckedAllCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </CheckBox>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox HorizontalAlignment="Center" 
                                    IsChecked="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}" 
					                Command="{Binding DataContext.IsSelected, ElementName=LayoutRoot}" 
					                CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--<DataGridTemplateColumn Header="SAP No." SortMemberPath="GoodsReceive.Material" Width="Auto" MinWidth="200">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Stretch">
                                <Hyperlink Command="{Binding DataContext.OpenGIDetailsCommand, ElementName=LayoutRoot}" CommandParameter="{Binding}"
                                           AutomationProperties.AutomationId="OpenDetailHyperLink">
                                    <TextBlock Text="{Binding GoodsReceive.Material}" />
                                </Hyperlink>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>-->
                <DataGridTextColumn Header="SAP No." MinWidth="140" Width="Auto" Binding="{Binding GoodsReceive.Material}" CanUserSort="True" Foreground="Black"/>
                <!--<DataGridTextColumn Header="Text" Width="*" MinWidth="250" Binding="{Binding Text}" Foreground="Black"/>-->
                <DataGridTextColumn Header="Quantity" MinWidth="100" CanUserSort="True" Width="*" Binding="{Binding Quantity, StringFormat={}{0:G29}}" Foreground="Black"/>
                <DataGridTextColumn Header="Eun" MinWidth="100" CanUserSort="True" Width="*" Binding="{Binding GoodsReceive.Eun}" Foreground="Black"/>
                <DataGridTextColumn Header="Transfer Type" MinWidth="140" CanUserSort="True"  Width="Auto" Binding="{Binding TransferType}" Foreground="Black"/>
                <DataGridTextColumn Header="Production No." MinWidth="120" CanUserSort="True"  Width="Auto" Binding="{Binding ProductionNo}" Foreground="Black"/>
                <DataGridTextColumn Header="Location To" MinWidth="100" Width="*" CanUserSort="True"  Binding="{Binding Location1.LocationDesc}" Foreground="Black"/>
                <DataGridTextColumn Header="Location From" MinWidth="100" Width="*" CanUserSort="True"  Binding="{Binding Location.LocationDesc}" Foreground="Black"/>
                <DataGridTextColumn Header="Issued By" MinWidth="150" Width="*" CanUserSort="True" Binding="{Binding CreatedBy}" Foreground="Black"/>
                <DataGridTextColumn Header="Issued On" MinWidth="150" Width="Auto" CanUserSort="True"  Binding="{Binding CreatedOn, StringFormat='{}{0:dd/MM/yyyy hh:mm tt}'}" Foreground="Black"/>
            </DataGrid.Columns>
        </DataGrid>
        
        <StackPanel Visibility="Collapsed" Grid.Row="3" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="2">
            <ProgressBar Name="pbStatus" Width="100" Minimum="0" Maximum="100" Value="{Binding ProgressValue}" ToolTip="Grid`s auto-refresh countdown"/>
            <TextBlock Text="{Binding ElementName=pbStatus, Path=Value, StringFormat={}{0:0}%}" FontSize="10" FontWeight="Light" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </StackPanel>
        
    </Grid>
</UserControl>
