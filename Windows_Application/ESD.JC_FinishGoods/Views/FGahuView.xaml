<UserControl Name="_userCtrl" x:Class="ESD.JC_FinishGoods.Views.FGahuView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ESD.JC_FinishGoods.Views"
             mc:Ignorable="d" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:wpf="clr-namespace:Prism.Interactivity;assembly=Prism.Wpf"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:infrastructure="clr-namespace:ESD.JC_Infrastructure;assembly=ESD.JC_Infrastructure"
             xmlns:ctrl="clr-namespace:ESD.JC_Infrastructure.Controls;assembly=ESD.JC_Infrastructure"
             xmlns:model="clr-namespace:DataLayer;assembly=DataLayer"
             xmlns:conv="clr-namespace:ESD.JC_FinishGoods.Converters"
             d:DesignWidth="800" d:DesignHeight="600">
    <UserControl.Resources>
        <infrastructure:ObjectToVisibilityConverter x:Key="ObjectToVisibility"/>
        <infrastructure:BrushColorConverter x:Key="BooleanToBrushConverter"/>
        <infrastructure:OKcolumnColorConverter x:Key="ColumnColorConverter"/>
        <infrastructure:TooltipsConverter x:Key="TooltipsToString"/>
        <infrastructure:ObservableCommand x:Key="OpenAHUDetailsCommand" Value="{Binding OpenAHUDetailsCommand}"/>
        <conv:CollectionToBooleanConverter x:Key="CollectionToBooleanConverter"/>

        <Style TargetType="Button" x:Key="OKColumnFlatButtonStyle">
            <Setter Property="Background">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource ColumnColorConverter}" >
                        <Binding Path="Item.BoolAhuStatus"/>
                        <Binding Path="Item.TextAhuStatus"/>
                    </MultiBinding>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="Transparent"/>
            <Setter Property="Width" Value="25"/>
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderThickness="0" Background="{TemplateBinding Background}" CornerRadius="15">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <CheckBox x:Key="cbHeader"
                ToolTipService.ToolTip="Check All" 
                IsThreeState="True"
                IsChecked="{Binding DataContext.AHU, Source={x:Reference _userCtrl}, Converter={StaticResource CollectionToBooleanConverter}, ConverterParameter={x:Type model:AHU}, Mode=OneWay}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Checked" >
                    <wpf:InvokeCommandAction Command="{Binding DataContext.CheckedAllCommand, Source={x:Reference _userCtrl}}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="Unchecked" >
                    <wpf:InvokeCommandAction Command="{Binding DataContext.UnCheckedAllCommand, Source={x:Reference _userCtrl}}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </CheckBox>
    </UserControl.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <wpf:InvokeCommandAction Command="{Binding OnLoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid x:Name="LayoutRoot" Background="WhiteSmoke">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <DataGrid x:Name="dgGrid" Grid.Row="0" ItemsSource="{Binding Path=AHU}" CurrentCell="{Binding CellInfo, Mode=TwoWay}" AutoGenerateColumns="False" IsReadOnly="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                  AutomationProperties.AutomationId="AHUGrid" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto">
            <DataGrid.Columns>
                <DataGridTemplateColumn Width="Auto">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="Background" Value="Transparent"/>
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.Header>
                        <StaticResource ResourceKey="cbHeader"/>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox HorizontalAlignment="Center" 
                                      IsChecked="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}" 
					                  Command="{Binding DataContext.IsSelected, ElementName=LayoutRoot}" 
					                  CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Project" SortMemberPath="Project" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Stretch">
                                <Hyperlink Command="{Binding DataContext.OpenAHUDetailsCommand, ElementName=LayoutRoot}" CommandParameter="{Binding}"
                                           AutomationProperties.AutomationId="OpenDetailHyperLink">
                                    <TextBlock Text="{Binding Project}" />
                                    <Hyperlink.Style>
                                        <Style TargetType="Hyperlink">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ID}" Value="0">
			                                        <Setter Property="Foreground" Value="Black" />
			                                        <Setter Property="Cursor" Value="Arrow" />
                                                    <Setter Property="IsEnabled" Value="False"/>
			                                        <Setter Property="TextBlock.TextDecorations" Value="{x:Null}" />
		                                        </DataTrigger>                  
                                            </Style.Triggers>
                                        </Style>
                                    </Hyperlink.Style>
                                </Hyperlink>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTemplateColumn.CellStyle>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Unit Tag" Width="Auto" Binding="{Binding UnitTag}" Foreground="Black"/>
                <DataGridTextColumn Header="Part No." Width="*" Binding="{Binding PartNo}" Foreground="Black"/>
                <DataGridTextColumn Header="Model" Width="*" Binding="{Binding Model}"  Foreground="Black">
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Serial No." Width="*" Binding="{Binding SerialNo}" Foreground="Black"/>
                <DataGridTextColumn Header="Item No." Width="Auto" Binding="{Binding Item}" Foreground="Black"/>
                <DataGridTextColumn Header="Section" Width="Auto" Binding="{Binding Section}" Foreground="Black"/>
                <DataGridTextColumn Width="Auto" Binding="{Binding ShipStatus2, Mode=TwoWay}" Foreground="Transparent">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Background" Value="{Binding ShipStatus2, Converter={StaticResource BooleanToBrushConverter}, Mode=OneWay}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource TooltipsToString}" >
                                        <Binding Path="SectionReceived2" />
                                        <Binding Path="Section2"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                    <DataGridTextColumn.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Shipping Status" />
                            <Button Name="btnAhuStatusFilter" Margin="8,0,0,0" Click="btnAhuStatusFilter_Click">
                                <Button.Template>
                                    <ControlTemplate>
                                        <Image RenderOptions.BitmapScalingMode="HighQuality" Source="/Resources/filter.png" 
                                               Height="10" Width="10" />
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </StackPanel>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Created On" Width="Auto" Binding="{Binding CreatedOn, StringFormat='{}{0:dd/MM/yyyy hh:mm tt}'}" Foreground="Black"/>
            </DataGrid.Columns>
        </DataGrid>

        <Popup Name="ahuStatusPopupSelection" Placement="Bottom" PlacementTarget="{Binding ElementName=btnAhuStatusFilter}" StaysOpen="False" Width="200">
            <Border Background="LightGray" BorderBrush="Gray" BorderThickness="1,1,1,1">
                <StackPanel Margin="5,5,5,15">
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,15">
                        <Button Margin="0,0,0,0" Name="btnSelectAll" Click="btnSelectAll_Click">
                            <Button.Template>
                                <ControlTemplate>
                                    <TextBlock Text="Select All" Foreground="Blue" Cursor="Hand" />
                                </ControlTemplate>
                            </Button.Template>
                        </Button>

                        <Button Margin="10,0,0,0" Name="btnUnselectAll" Click="btnUnselectAll_Click">
                            <Button.Template>
                                <ControlTemplate>
                                    <TextBlock Text="Select None" Foreground="Blue" Cursor="Hand" />
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </StackPanel>

                    <ListBox ItemsSource="{Binding ListBoxAhuStatus}" BorderThickness="0">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox IsChecked="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}" 
                                              Checked="ApplyFilters" 
                                              Unchecked="ApplyFilters" />
                                    <Button Content="{Binding Item.BoolAhuStatus}" Style="{StaticResource OKColumnFlatButtonStyle}"/>
                                    <TextBlock Text="{Binding Item.TextAhuStatus}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </StackPanel>
            </Border>
        </Popup>

        <StackPanel Visibility="Collapsed" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="2">
            <ProgressBar Name="pbStatus" Width="100" Minimum="0" Maximum="100" Value="{Binding ProgressValue}" ToolTip="Grid`s auto-refresh countdown"/>
            <TextBlock Text="{Binding ElementName=pbStatus, Path=Value, StringFormat={}{0:0}%}" FontSize="10" FontWeight="Light" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </StackPanel>
    </Grid>
</UserControl>
