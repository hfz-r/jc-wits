<UserControl Name="_userCtrl" x:Class="ESD.JC_FinishGoods.Views.FGfcuView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ESD.JC_FinishGoods.Views"
             mc:Ignorable="d" 
             xmlns:ToggleSwitch="clr-namespace:ToggleSwitch;assembly=ToggleSwitch"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:wpf="clr-namespace:Prism.Interactivity;assembly=Prism.Wpf"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:infrastructure="clr-namespace:ESD.JC_Infrastructure;assembly=ESD.JC_Infrastructure"
             xmlns:ctrl="clr-namespace:ESD.JC_Infrastructure.Controls;assembly=ESD.JC_Infrastructure"
             xmlns:model="clr-namespace:DataLayer;assembly=DataLayer"
             xmlns:conv="clr-namespace:ESD.JC_FinishGoods.Converters"
             d:DesignWidth="800" d:DesignHeight="600">
    <UserControl.Resources>
        <infrastructure:ObjectToVisibilityConverter x:Key="ObjectToVisibility"/>
        <infrastructure:BrushColorConverter x:Key="BooleanToBrushConverter"/>
        <infrastructure:OKcolumnColorConverter x:Key="ColumnColorConverter"/>
        <infrastructure:TooltipsConverter x:Key="TooltipsToString"/>
        <infrastructure:PanelDimensionsConverter x:Key="PanelDimensionsConverter"/>
        <infrastructure:PanelMarginConverter x:Key="PanelMarginConverter"/>
        <infrastructure:ObservableCommand x:Key="OpenFCUDetailsCommand" Value="{Binding OpenFCUDetailsCommand}"/>
        <conv:CollectionToBooleanConverter x:Key="CollectionToBooleanConverter"/>

        <Storyboard x:Key="expandStoryBoard" 
                    TargetProperty="RenderTransform.(TranslateTransform.X)"
                    AccelerationRatio=".4"
                    DecelerationRatio=".4">
            <DoubleAnimation Storyboard.TargetName="sidePanel" Duration="0:0:0.6" From="0">
                <DoubleAnimation.To>
                    <MultiBinding Converter="{StaticResource PanelDimensionsConverter}">
                        <Binding Mode="OneWay" Source="{x:Reference propertiesPanel}" Path="Width" />
                        <Binding Mode="OneWay" Source="{x:Reference tabButton}" Path="Width" />
                    </MultiBinding>
                </DoubleAnimation.To>
            </DoubleAnimation>
        </Storyboard>
        <Storyboard x:Key="collapseStoryBoard" 
                    TargetProperty="RenderTransform.(TranslateTransform.X)"
                    AccelerationRatio=".4"
                    DecelerationRatio=".4">
            <DoubleAnimation Storyboard.TargetName="sidePanel" Duration="0:0:0.6" To="0">
                <DoubleAnimation.From>
                    <MultiBinding Converter="{StaticResource PanelDimensionsConverter}">
                        <Binding Mode="OneWay" Source="{x:Reference propertiesPanel}" Path="Width" />
                        <Binding Mode="OneWay" Source="{x:Reference tabButton}" Path="Width" />
                    </MultiBinding>
                </DoubleAnimation.From>
            </DoubleAnimation>
        </Storyboard>

        <Style TargetType="StackPanel" x:Key="FadeOutSP">
            <Style.Triggers>
                <EventTrigger RoutedEvent="Control.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard >
                            <DoubleAnimation Duration="0:0:1" To="1" Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Control.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard >
                            <DoubleAnimation Duration="0:0:1" To="0.35" Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="OKColumnFlatButtonStyle">
            <Setter Property="Background">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource ColumnColorConverter}" >
                        <Binding Path="BoolShipStatus" />
                        <Binding Path="TexShipStatus"/>
                    </MultiBinding>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="Transparent"/>
            <Setter Property="Width" Value="25"/>
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderThickness="0" Background="{TemplateBinding Background}" CornerRadius="15">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <CheckBox x:Key="cbHeader"
                ToolTipService.ToolTip="Check All" 
                IsThreeState="True"
                IsChecked="{Binding DataContext.FCU, Source={x:Reference _userCtrl}, Converter={StaticResource CollectionToBooleanConverter}, ConverterParameter={x:Type model:FCU}, Mode=OneWay}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Checked" >
                    <wpf:InvokeCommandAction Command="{Binding DataContext.CheckedAllCommand, Source={x:Reference _userCtrl}}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="Unchecked" >
                    <wpf:InvokeCommandAction Command="{Binding DataContext.UnCheckedAllCommand, Source={x:Reference _userCtrl}}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </CheckBox>
    </UserControl.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <wpf:InvokeCommandAction Command="{Binding OnLoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid x:Name="LayoutRoot" Background="WhiteSmoke">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <DataGrid x:Name="dgGrid"  Grid.Row="0" ItemsSource="{Binding Path=FCU}" CurrentCell="{Binding CellInfo, Mode=TwoWay}" AutoGenerateColumns="False" IsReadOnly="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                  AutomationProperties.AutomationId="FCUGrid" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto">
            <DataGrid.Columns>
                <DataGridTemplateColumn Width="Auto">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="Background" Value="Transparent"/>
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.Header>
                        <StaticResource ResourceKey="cbHeader"/>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox HorizontalAlignment="Center" 
                                      IsChecked="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}" 
					                  Command="{Binding DataContext.IsSelected, ElementName=LayoutRoot}" 
					                  CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Project" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Stretch">
                                <Hyperlink Command="{Binding DataContext.OpenFCUDetailsCommand, ElementName=LayoutRoot}" CommandParameter="{Binding}"
                                           AutomationProperties.AutomationId="OpenDetailHyperLink">
                                    <TextBlock Text="{Binding Project}" />
                                    <Hyperlink.Style>
                                        <Style TargetType="Hyperlink">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ID}" Value="0">
			                                        <Setter Property="Foreground" Value="Black" />
			                                        <Setter Property="Cursor" Value="Arrow" />
                                                    <Setter Property="IsEnabled" Value="False"/>
			                                        <Setter Property="TextBlock.TextDecorations" Value="{x:Null}" />
		                                        </DataTrigger>                  
                                            </Style.Triggers>
                                        </Style>
                                    </Hyperlink.Style>
                                </Hyperlink>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTemplateColumn.CellStyle>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Unit Tag" Width="Auto" Binding="{Binding UnitTag}" Foreground="Black"/>
                <DataGridTextColumn Header="Part No." Width="*" Binding="{Binding PartNo}" Foreground="Black"/>
                <DataGridTextColumn Header="Model" Width="*" Binding="{Binding Model}" CanUserSort="False" Foreground="Black">
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Serial No." Width="*" Binding="{Binding SerialNo}" CanUserSort="False" Foreground="Black"/>
                <DataGridTextColumn Header="Item No." Width="Auto" Binding="{Binding Item}" Foreground="Black"/>
                <DataGridTextColumn Header="Quantity" Width="Auto" Binding="{Binding Qty}" Foreground="Black"/>
                <DataGridTextColumn Header="Shipping Status" Width="Auto" Binding="{Binding ShipStatus}" Foreground="Transparent">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Background" Value="{Binding ShipStatus, Converter={StaticResource BooleanToBrushConverter}, Mode=OneWay}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource TooltipsToString}" >
                                        <Binding Path="QtyReceived" />
                                        <Binding Path="Qty"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>

        <StackPanel x:Name="sidePanel" Style="{StaticResource FadeOutSP}" Opacity="0.35" Grid.Row="0" HorizontalAlignment="Right"
                Margin="{Binding ElementName=propertiesPanel, Path=Width, Converter={StaticResource PanelMarginConverter}}">
            <StackPanel.RenderTransform>
                <TranslateTransform />
            </StackPanel.RenderTransform>
            <StackPanel Orientation="Horizontal">
                <ctrl:SidePanelTab x:Name="tabButton" VerticalAlignment="Top" Margin="0,20,0,0" MouseDown="StackPanel_MouseDown" />
                <StackPanel Orientation="Vertical" Background="LightGray" MouseDown="StackPanel_MouseDown">
                    <Grid x:Name="propertiesPanel" Width="250" Height="Auto">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="40"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Datagrid Options" Grid.ColumnSpan="2" FontWeight="Bold" HorizontalAlignment="Center" Margin="0,10,0,10"/>
                        <TextBlock Text="Auto-refresh grid:" Grid.Row="1" Grid.Column="0" Padding="10,10" />
                        <ToggleSwitch:HorizontalToggleSwitch 
                                Grid.Row="1" Grid.Column="1" 
                                BorderBrush="#FF1F1F1F"
                                Width="80" 
                                UncheckedBackground="#FF333430" 
                                UncheckedForeground="#FF999999" 
                                ThumbSize="40" 
                                IsChecked="{Binding IsEnableAutoRefresh, Mode=TwoWay}" 
                                HorizontalAlignment="Left">
                            <ToggleSwitch:HorizontalToggleSwitch.CheckedBackground>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF3EB3EC"/>
                                    <GradientStop Color="#FF349BE6" Offset="1"/>
                                </LinearGradientBrush>
                            </ToggleSwitch:HorizontalToggleSwitch.CheckedBackground>
                            <ToggleSwitch:HorizontalToggleSwitch.ThumbBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF4D4E48"/>
                                    <GradientStop Color="#FF333430" Offset="1"/>
                                    <GradientStop Color="#FF333330" Offset="0.021"/>
                                </LinearGradientBrush>
                            </ToggleSwitch:HorizontalToggleSwitch.ThumbBrush>
                        </ToggleSwitch:HorizontalToggleSwitch>
                        <TextBlock Text="(ShipStatus) column filter: " Grid.Row="2" Grid.Column="0" Padding="10,10" />
                        <ComboBox Grid.Row="2" Grid.Column="1" Padding="10,10" Margin="0,5,10,5"
                                  ItemsSource="{Binding OKColumnFilterList}"
                                  AutomationProperties.AutomationId="OKColumnFilterData">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Button Content="{Binding BoolShipStatus}" Style="{StaticResource OKColumnFlatButtonStyle}"/>
                                        <TextBlock Text="{Binding TexShipStatus}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </Grid>
                </StackPanel>
            </StackPanel>
        </StackPanel>

        <StackPanel Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="2">
            <ProgressBar Name="pbStatus" Width="100" Minimum="0" Maximum="100" Value="{Binding ProgressValue}" ToolTip="Grid`s auto-refresh countdown"/>
            <TextBlock Text="{Binding ElementName=pbStatus, Path=Value, StringFormat={}{0:0}%}" FontSize="10" FontWeight="Light" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </StackPanel>
    </Grid>
</UserControl>
